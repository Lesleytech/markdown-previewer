{"version":3,"sources":["components/Previewer/Previewer.module.css","App.module.css","components/Editor/Editor.module.css","components/Toolbar/Toolbar.module.css","components/TopBar/TopBar.module.css","components/Toolbar/Toolbar.js","components/Editor/Editor.js","components/Previewer/Previewer.js","components/TopBar/TopBar.js","App.js","helpers/sampleText.js","index.js"],"names":["module","exports","Toolbar","title","handleClose","className","styles","toolbar","onClick","e","id","aria-hidden","Editor","editorText","handleChange","container","value","onChange","spellCheck","Previewer","preview","TopBar","handleOnClick","isEditor","isPreviewer","href","target","rel","App","useState","setEditorText","setIsEditor","setIsPreviewer","marked","setOptions","breaks","useEffect","editorContainer","document","getElementById","previewerContainer","isMobile","window","innerWidth","innerHTML","style","width","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.6838fb3b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Previewer_container__2cUdT\",\"preview\":\"Previewer_preview__2agIV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1AxbY\",\"main-wrapper\":\"App_main-wrapper__3N0ch\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Editor_container__2uj-s\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"toolbar\":\"Toolbar_toolbar__3ZNI8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"TopBar_container__lXUjX\"};","import React from 'react';\r\nimport styles from './Toolbar.module.css';\r\n\r\nconst Toolbar = ({ title, handleClose }) => {\r\n  return (\r\n    <div className={styles.toolbar}>\r\n      <small>{title}</small>\r\n      <button onClick={(e) => handleClose(e)} id={'close' + title}>\r\n        <i className=\"fa fa-times-circle\" aria-hidden=\"true\"></i>\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Toolbar;\r\n","import React from 'react';\r\nimport styles from './Editor.module.css';\r\nimport Toolbar from '../Toolbar/Toolbar';\r\n\r\nconst Editor = ({ editorText, handleChange, handleClose }) => {\r\n  return (\r\n    <div className={styles.container} id=\"editor-container\">\r\n      <Toolbar title=\"Editor\" handleClose={handleClose} />\r\n      <textarea\r\n        id=\"editor\"\r\n        value={editorText}\r\n        onChange={(e) => handleChange(e)}\r\n        spellCheck=\"false\"\r\n      ></textarea>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Editor;\r\n","import React from 'react';\r\nimport styles from './Previewer.module.css';\r\nimport Toolbar from '../Toolbar/Toolbar';\r\n\r\nconst Previewer = ({ handleClose }) => {\r\n  return (\r\n    <div className={styles.container} id=\"previewer-container\">\r\n      <Toolbar title=\"Previewer\" handleClose={handleClose} />\r\n      <div id=\"preview\" className={styles.preview}></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Previewer;\r\n","import React from 'react';\r\nimport styles from './TopBar.module.css';\r\n\r\nconst TopBar = ({ handleOnClick, isEditor, isPreviewer }) => {\r\n  return (\r\n    <div className={styles.container}>\r\n      <strong>Markdown Previewer</strong>\r\n      <div>\r\n        <a\r\n          href=\"https://www.github.com/lesleytech/markdown-previewer\"\r\n          target=\"_blank\"\r\n          rel=\"noreferrer noopener\"\r\n          title=\"View code on github\"\r\n        >\r\n          <i className=\"fa fa-github fa-2x\" aria-hidden=\"true\"></i>\r\n        </a>\r\n        <button onClick={(e) => handleOnClick(e)} id=\"hide-editor\">\r\n          {isEditor ? 'Hide' : 'Show'} editor\r\n        </button>\r\n        <button onClick={(e) => handleOnClick(e)} id=\"hide-previewer\">\r\n          {isPreviewer ? 'Hide' : 'Show'} previewer\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TopBar;\r\n","import React, { useState, useEffect } from 'react';\nimport Editor from './components/Editor/Editor';\nimport Previewer from './components/Previewer/Previewer';\nimport TopBar from './components/TopBar/TopBar';\nimport marked from 'marked';\nimport sampleText from './helpers/sampleText';\nimport styles from './App.module.css';\n\nconst App = () => {\n  const [editorText, setEditorText] = useState(sampleText);\n  const [isEditor, setIsEditor] = useState(true);\n  const [isPreviewer, setIsPreviewer] = useState(true);\n\n  const handleChange = (e) => {\n    const { value } = e.target;\n    setEditorText(value);\n  };\n\n  const handleClick = (e) => {\n    const { id } = e.target;\n\n    if (id === 'hide-editor') {\n      setIsEditor(!isEditor);\n    } else if (id === 'hide-previewer') {\n      setIsPreviewer(!isPreviewer);\n    }\n  };\n\n  const handleClose = (e) => {\n    const { id } = e.target;\n\n    if (id === 'closeEditor') {\n      setIsEditor(false);\n    } else if (id === 'closePreviewer') {\n      setIsPreviewer(false);\n    }\n  };\n\n  marked.setOptions({ breaks: true });\n\n  useEffect(() => {\n    const editorContainer = document.getElementById('editor-container');\n    const previewerContainer = document.getElementById('previewer-container');\n\n    const isMobile = window.innerWidth < 600;\n\n    if (isPreviewer) {\n      document.getElementById('preview').innerHTML = marked(editorText);\n    }\n\n    if (isPreviewer && isEditor) {\n      editorContainer.style.width = isMobile ? '100%' : '40%';\n      previewerContainer.style.width = isMobile ? '100%' : '60%';\n    } else if (isPreviewer && !isEditor) {\n      previewerContainer.style.width = '100%';\n    } else if (!isPreviewer && isEditor) {\n      editorContainer.style.width = '100%';\n    }\n  }, [editorText, isEditor, isPreviewer]);\n\n  return (\n    <div className={styles.container}>\n      <TopBar\n        handleOnClick={handleClick}\n        isPreviewer={isPreviewer}\n        isEditor={isEditor}\n      />\n      <div className={styles['main-wrapper']} id=\"main-wrapper\">\n        {isEditor && (\n          <Editor\n            editorText={editorText}\n            handleChange={handleChange}\n            handleClose={handleClose}\n          />\n        )}\n        {isPreviewer && <Previewer handleClose={handleClose} />}\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","const sampleText = `# Welcome to my React Markdown Previewer!\r\n\r\n## This is a sub-heading...\r\n### And here's some other cool stuff:\r\n  \r\nHeres some code, \\`<div></div>\\`, between 2 backticks.\r\n\r\n\\`\\`\\`\r\n// this is multi-line code:\r\n\r\nfunction anotherExample(firstLine, lastLine) {\r\n  if (firstLine == '\\`\\`\\`' && lastLine == '\\`\\`\\`') {\r\n    return multiLineCode;\r\n  }\r\n}\r\n\\`\\`\\`\r\n  \r\nYou can also make text **bold**... whoa!\r\nOr _italic_.\r\nOr... wait for it... **_both!_**\r\nAnd feel free to go crazy ~~crossing stuff out~~.\r\n\r\nThere's also [links](https://www.freecodecamp.com), and\r\n> Block Quotes!\r\n\r\nAnd if you want to get really crazy, even tables:\r\n\r\nWild Header | Crazy Header | Another Header?\r\n------------ | ------------- | ------------- \r\nYour content can | be here, and it | can be here....\r\nAnd here. | Okay. | I think we get it.\r\n\r\n- And of course there are lists.\r\n  - Some are bulleted.\r\n     - With different indentation levels.\r\n        - That look like this.\r\n\r\n\r\n1. And there are numbererd lists too.\r\n1. Use just 1s if you want! \r\n1. But the list goes on...\r\n- Even if you use dashes or asterisks.\r\n* And last but not least, let's not forget embedded images:\r\n\r\n![React Logo w/ Text](https://goo.gl/Umyytc)`;\r\n\r\nexport default sampleText;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}